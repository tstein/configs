#!/bin/zsh
# Create a container with a given directory mounted for experimentation.

set -eu

IMAGE="fedora:latest"
NAME=scaff_$(date "+%Y-%m-%d_%H.%M.%S")
# Mount the dir in the first positional arg rw at /work, defaulting to $PWD.
WORKDIR=$(readlink -m ${1:-.})

TEMPDIR=$(mktemp -d)
trap "rm -rf ${TEMPDIR}" EXIT

# Define the container, install some necessities, and set up a user.
pushd ${TEMPDIR}
cat >Dockerfile <<EOF
FROM ${IMAGE}
RUN dnf -y install zsh git tmux htop tree neovim vim ctags file \
util-linux-user \
golang npm python3-pip python3-bpython rubygems
RUN useradd -s /bin/zsh ${USER}
RUN echo "${USER} ALL=(ALL) ALL, NOPASSWD: ALL" >>/etc/sudoers
VOLUME /work
WORKDIR /work
EOF
podman pull ${IMAGE}
buildah build --format=docker -t scaff .
popd

# Create a replacement zlocal. This sets up a distinct prompt but also disables
# auto-mtmux, which can't see if it's already in tmux across container
# boundaries and doesn't make sense in this context anyway.
echo 'PR_COLOR=$PR_CYAN' >>${TEMPDIR}/.zlocal
echo 'PR_CHAR=ðŸ“¦' >>${TEMPDIR}/.zlocal

# Run it!
podman run --rm --rmi --name ${NAME} -h "scaff(${HOST})" \
  -v /etc/localtime:/etc/localtime:ro \
  -v ${HOME}:/home/${USER}:O \
  -v ${TEMPDIR}/.zlocal:/home/${USER}/.zlocal \
  -v ${WORKDIR}:/work \
  -i -t scaff /bin/zsh
